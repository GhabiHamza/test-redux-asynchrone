{"version":3,"sources":["components/profileItem.js","components/profileList.js","actions/actions.js","actions/types.js","components/postItem.js","components/postList.js","components/commentItem.js","components/commentList.js","components/routes.js","components/App.js","reducers/reducerProfile.js","reducers/reducerPost.js","reducers/reducerComment.js","reducers/index.js","store.js","serviceWorker.js","index.js"],"names":["ProfileItem","state","user","this","props","Card","CardBody","CardTitle","name","CardSubtitle","username","CardText","email","to","Button","Component","ProfileList","getUser","users","map","key","id","React","connect","ReducerProfile","dispatch","axios","get","then","res","data","type","PostItem","setState","posts","filter","post","String","match","params","title","body","class","ReducerPost","PostList","getPosts","CommentItem","comments","comment","ReducerComment","CommentList","getComments","Routes","exact","path","component","App","className","action","combineReducers","middleware","ReduxThunk","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","Boolean","location","hostname","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aeaf1840.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Card, CardText, CardBody,\r\n    CardTitle, CardSubtitle, Button\r\n  } from 'reactstrap';\r\n  import {Link} from 'react-router-dom'\r\n  \r\n\r\n\r\nclass ProfileItem extends Component {\r\n    state = {  }\r\n    \r\n    render() { \r\n        const {user}=this.props\r\n        return ( <div>\r\n            <Card>\r\n        {/* <CardImg top width=\"100%\" src={user.img} alt=\"Card image cap\" /> */}\r\n        <CardBody>\r\n          <CardTitle>{user.name}</CardTitle>\r\n          <CardSubtitle>{user.username}</CardSubtitle>\r\n          <CardText>{user.email}</CardText>\r\n          <Link to={'/users/${user.id}'} >\r\n          <Button>See Posts</Button>\r\n          </Link>\r\n        </CardBody>\r\n      </Card>\r\n\r\n        </div>  );\r\n    }\r\n}\r\n \r\nexport default ProfileItem;","import React from 'react';\r\nimport ProfileItem from '../components/profileItem'\r\nimport { getUser } from '../actions/actions'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass ProfileList extends React.Component {\r\n    \r\n    componentDidMount(){\r\n        this.props.getUser()\r\n            \r\n        }\r\n\r\n    render(){\r\n        const {users}=this.props\r\n    return ( <div>\r\n        {users.map((user)=><ProfileItem user={user} key={user.id}/>)}\r\n        \r\n    </div> );\r\n}\r\n}\r\n const mapStateToProps=state=>{\r\n     return{\r\n     users:state.ReducerProfile\r\n     }\r\n }\r\nexport default connect(mapStateToProps,{getUser})(ProfileList);","import {Get_Users,Get_Posts,Get_Comments, Get_User,} from './types'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const getUser =()=>dispatch=>{\r\n    axios.get('https://jsonplaceholder.typicode.com/users')\r\n         .then(res=>res.data)\r\n         .then(users=>dispatch({\r\n             type:Get_Users,\r\n             users\r\n         }))\r\n}\r\nexport const getPosts =()=>dispatch=>{\r\n    axios.get('https://jsonplaceholder.typicode.com/posts')\r\n         .then(res=>res.data)\r\n         .then(posts=>dispatch({\r\n             type:Get_Posts,\r\n             posts\r\n         }))\r\n}\r\nexport const getComments =()=>dispatch=>{\r\n    axios.get('https://jsonplaceholder.typicode.com/comments')\r\n         .then(res=>res.data)\r\n         .then(comments=>dispatch({\r\n             type:Get_Comments,\r\n             comments\r\n             \r\n         }))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export const Get_Users= 'Get_User'\r\nexport const Get_Posts='Get_Posts';\r\nexport const Get_Comments='Get_Comments';\r\n","import React, { Component } from 'react';\r\nimport {Card, CardText, CardBody,\r\nCardTitle, Button\r\n} from 'reactstrap';\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\n\r\nclass PostItem extends Component {\r\n\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n       ...this.props.posts.filter(post => String(post.id) === this.props.match.params.id)[0]\r\n\r\n\r\n  });\r\n\r\n  }\r\n    \r\n    \r\n    render() {\r\n        const {post} = this.props\r\n        return (<div>\r\n            <Card>\r\n        \r\n        <CardBody>\r\n          <CardTitle>{post.title}</CardTitle>\r\n          <CardText>{post.body}</CardText>\r\n          <Link to={'/posts/${post.id}'} >\r\n          <Button><i class=\"fal fa-comment-exclamation\"></i></Button>\r\n          </Link>\r\n        </CardBody>\r\n      </Card>\r\n\r\n\r\n        </div>  );\r\n    }\r\n}\r\n const mapStateToProps=state=>{\r\n    return{\r\n        posts:state.ReducerPost\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(PostItem);","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport  PostItem from'../components/postItem'\r\nimport {getPosts} from '../actions/actions'\r\n\r\n\r\nclass PostList extends Component {\r\n  \r\n    componentDidMount(){\r\n        this.props.getPosts()\r\n            \r\n        }\r\n    render(){\r\n       const {posts}=this.props\r\n        return ( \r\n            <div>\r\n                {posts.map((post)=><PostItem post={post} key={post.id}/>)}\r\n                \r\n            </div>\r\n             );\r\n}\r\n}\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        posts:state.ReducerPost\r\n    }\r\n}\r\n \r\nexport default connect(mapStateToProps,{getPosts})(PostList);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nclass CommentItem extends Component {\r\n    componentDidMount(){\r\n        this.setState({\r\n            ...this.props.comments.filter(comment => String(comment.id) === this.props.match.params.id)[0]\r\n\r\n\r\n        });\r\n        \r\n    }\r\n    \r\n    render() { \r\n        const {comment}=this.props\r\n        return ( <div>\r\n            <h1>{comment.name}</h1>\r\n            <p>{comment.body}</p>\r\n\r\n        </div> );\r\n    }\r\n}\r\nconst mapStateToProps=state=>{\r\n    return{\r\n    comments:state.ReducerComment\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(CommentItem);","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport CommentItem from '../components/commentItem'\r\nimport {getComments} from '../actions/actions'\r\n\r\n\r\n\r\nclass CommentList extends React.Component{\r\n   \r\n    componentDidMount(){\r\n        this.props.getComments()\r\n        \r\n        }\r\n    render(){\r\n    return ( <div>\r\n        {this.props.comments.map((comment)=><CommentItem comment={comment} key={comment.id}/>)}\r\n    </div> );\r\n}\r\n}\r\n const mapStateToProps=state=>{\r\n     return{\r\n     comments:state.ReducerComment\r\n     }\r\n }\r\nexport default connect(mapStateToProps,{getComments})(CommentList);","import React from 'react';\r\n\r\nimport {Route} from 'react-router-dom'\r\nimport ProfileList from '../components/profileList'\r\nimport PostList from '../components/postList'\r\nimport CommentList from '../components/commentList'\r\n\r\nconst Routes = () => {\r\n    return ( <div>\r\n        <Route exact path='/' component={ProfileList}/>\r\n        <Route exact path='/users/:id' component={PostList}/>\r\n        <Route exact path='/posts/:id' component={CommentList}/>\r\n    </div> );\r\n}\r\n \r\nexport default Routes;\r\n\r\n","import React from 'react';\nimport Routes from '../components/routes'\nimport {BrowserRouter} from 'react-router-dom'\n\nimport '../components/App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <Routes/>\n      </BrowserRouter>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","\r\nimport {Get_Users} from '../actions/types'\r\n\r\n  const ReducerProfile=(state=[],action)=>{\r\n      switch (action.type){\r\n        case Get_Users:\r\n          return [\r\n            ...state,\r\n            ...action.users\r\n          ]\r\n        default:\r\n            return state\r\n      }\r\n\r\n  }\r\n  export default ReducerProfile;","\r\nimport {Get_Posts} from '../actions/types'\r\n\r\n\r\n\r\n  const ReducerPost=(state=[],action)=>{\r\n      switch(action.type){\r\n        case Get_Posts:\r\n          return [\r\n            ...state,\r\n            ...action.posts\r\n          ]\r\n        default:\r\n            return state\r\n      }\r\n  }\r\n  export default ReducerPost;","import {Get_Comments} from '../actions/types'\r\n  const ReducerComment=(state=[],action)=>{\r\n      switch(action.type){\r\n        case Get_Comments:\r\n          return [\r\n            ...state,\r\n            ...action.comments\r\n          ]\r\n        default:\r\n            return state\r\n      }\r\n  }\r\n  export default ReducerComment;","import {combineReducers} from 'redux'\r\nimport ReducerProfile from './reducerProfile'\r\nimport ReducerPost from './reducerPost'\r\nimport ReducerComment from './reducerComment'\r\n\r\n\r\nexport default combineReducers({ReducerProfile,ReducerPost,ReducerComment})","import {createStore,applyMiddleware,compose} from 'redux'\r\nimport ReduxThunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\nconst middleware=[ReduxThunk]\r\n\r\nexport default createStore(rootReducer,compose(applyMiddleware(...middleware),\r\nwindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App';\nimport store from './store';\nimport {Provider} from 'react-redux'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}